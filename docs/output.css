/*! tailwindcss v4.0.9 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@layer theme {
  :root,
  :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
      "Liberation Mono", "Courier New", monospace;
    --color-teal-300: oklch(0.855 0.138 181.071);
    --color-cyan-100: oklch(0.956 0.045 203.388);
    --color-cyan-200: oklch(0.917 0.08 205.041);
    --color-cyan-300: oklch(0.865 0.127 207.078);
    --color-cyan-400: oklch(0.789 0.154 211.53);
    --color-cyan-600: oklch(0.609 0.126 221.723);
    --color-cyan-700: oklch(0.52 0.105 223.128);
    --color-cyan-800: oklch(0.45 0.085 224.283);
    --color-cyan-900: oklch(0.398 0.07 227.392);
    --color-sky-400: oklch(0.746 0.16 232.661);
    --color-blue-100: oklch(0.932 0.032 255.585);
    --color-blue-400: oklch(0.707 0.165 254.624);
    --color-gray-100: oklch(0.967 0.003 264.542);
    --color-gray-300: oklch(0.872 0.01 258.338);
    --color-gray-400: oklch(0.707 0.022 261.325);
    --color-gray-500: oklch(0.551 0.027 264.364);
    --color-gray-700: oklch(0.373 0.034 259.733);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --font-weight-light: 300;
    --font-weight-medium: 500;
    --font-weight-bold: 700;
    --leading-loose: 2;
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(
      --font-sans--font-variation-settings
    );
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(
      --font-mono--font-feature-settings
    );
    --default-mono-font-variation-settings: var(
      --font-mono--font-variation-settings
    );
  }
}
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html,
  :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(
      --default-font-family,
      ui-sans-serif,
      system-ui,
      sans-serif,
      "Apple Color Emoji",
      "Segoe UI Emoji",
      "Segoe UI Symbol",
      "Noto Color Emoji"
    );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  body {
    line-height: inherit;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b,
  strong {
    font-weight: bolder;
  }
  code,
  kbd,
  samp,
  pre {
    font-family: var(
      --default-mono-font-family,
      ui-monospace,
      SFMono-Regular,
      Menlo,
      Monaco,
      Consolas,
      "Liberation Mono",
      "Courier New",
      monospace
    );
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(
      --default-mono-font-variation-settings,
      normal
    );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub,
  sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol,
  ul,
  menu {
    list-style: none;
  }
  img,
  svg,
  video,
  canvas,
  audio,
  iframe,
  embed,
  object {
    display: block;
    vertical-align: middle;
  }
  img,
  video {
    max-width: 100%;
    height: auto;
  }
  button,
  input,
  select,
  optgroup,
  textarea,
  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
    color: color-mix(in oklab, currentColor 50%, transparent);
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit,
  ::-webkit-datetime-edit-year-field,
  ::-webkit-datetime-edit-month-field,
  ::-webkit-datetime-edit-day-field,
  ::-webkit-datetime-edit-hour-field,
  ::-webkit-datetime-edit-minute-field,
  ::-webkit-datetime-edit-second-field,
  ::-webkit-datetime-edit-millisecond-field,
  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button,
  input:where([type="button"], [type="reset"], [type="submit"]),
  ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button,
  ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .relative {
    position: relative;
  }
  .sticky {
    position: sticky;
  }
  .inset-inline-4 {
    inset-inline: 1rem;
  }
  .inset-block-4 {
    inset-block: 1rem;
  }
  .inline-start-4 {
    inset-inline-start: 1rem;
  }
  .inline-end-4 {
    inset-inline-end: 1rem;
  }
  .col-span-3 {
    grid-column: span 3 / span 3;
  }
  .col-start-2 {
    grid-column-start: 2;
  }
  .row-start-2 {
    grid-row-start: 2;
  }
  .row-start-3 {
    grid-row-start: 3;
  }
  .float-start {
    float: inline-start;
  }
  .clear-start {
    clear: inline-start;
  }
  .mli-16 {
    margin-inline: 4rem;
  }
  .mli-auto {
    margin-inline: auto;
  }
  .mlb-6 {
    margin-block: 1.5rem;
  }
  .mlb-16 {
    margin-block: 4rem;
  }
  .space-i-2 {
    & > :not(:last-child) {
      --tw-space-i-reverse: 0;
      margin-inline-start: calc(0.5rem * var(--tw-space-i-reverse));
      margin-inline-end: calc(0.5rem * calc(1 - var(--tw-space-i-reverse)));
    }
  }
  .space-i-4 {
    & > :not(:last-child) {
      --tw-space-i-reverse: 0;
      margin-inline-start: calc(1rem * var(--tw-space-i-reverse));
      margin-inline-end: calc(1rem * calc(1 - var(--tw-space-i-reverse)));
    }
  }
  .space-i-8 {
    & > :not(:last-child) {
      --tw-space-i-reverse: 0;
      margin-inline-start: calc(2rem * var(--tw-space-i-reverse));
      margin-inline-end: calc(2rem * calc(1 - var(--tw-space-i-reverse)));
    }
  }
  .mis-16 {
    margin-inline-start: 4rem;
  }
  .mie-16 {
    margin-inline-end: 4rem;
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .flow-root {
    display: flow-root;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .flex-1 {
    flex: 1;
  }
  .resize {
    resize: both;
  }
  .resize-block {
    resize: block;
  }
  .resize-inline {
    resize: inline;
  }
  .appearance-none {
    appearance: none;
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
  .grid-rows-1 {
    grid-template-rows: repeat(1, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-col-reverse {
    flex-direction: column-reverse;
  }
  .flex-row-reverse {
    flex-direction: row-reverse;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(
        calc(var(--spacing) * 4) * var(--tw-space-y-reverse)
      );
      margin-block-end: calc(
        calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse))
      );
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(
        calc(var(--spacing) * 6) * var(--tw-space-y-reverse)
      );
      margin-block-end: calc(
        calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse))
      );
    }
  }
  .space-y-12 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(
        calc(var(--spacing) * 12) * var(--tw-space-y-reverse)
      );
      margin-block-end: calc(
        calc(var(--spacing) * 12) * calc(1 - var(--tw-space-y-reverse))
      );
    }
  }
  .space-x-4 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(
        calc(var(--spacing) * 4) * var(--tw-space-x-reverse)
      );
      margin-inline-end: calc(
        calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse))
      );
    }
  }
  .overflow-auto {
    overflow: auto;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-bs-xl {
    border-start-start-radius: 0.75rem;
    border-start-end-radius: 0.75rem;
  }
  .rounded-is-xl {
    border-start-start-radius: 0.75rem;
    border-end-start-radius: 0.75rem;
  }
  .rounded-ie-xl {
    border-start-end-radius: 0.75rem;
    border-end-end-radius: 0.75rem;
  }
  .rounded-be-xl {
    border-end-start-radius: 0.75rem;
    border-end-end-radius: 0.75rem;
  }
  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
  .border-4 {
    border-style: var(--tw-border-style);
    border-width: 4px;
  }
  .border-li-8 {
    border-inline-start-width: 8px;
    border-inline-end-width: 8px;
  }
  .border-is-8 {
    border-inline-start-width: 8px;
  }
  .border-ie-8 {
    border-inline-end-width: 8px;
  }
  .border-solid {
    --tw-border-style: solid;
    border-style: solid;
  }
  .border-blue-100 {
    border-color: var(--color-blue-100);
  }
  .border-blue-400 {
    border-color: var(--color-blue-400);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-li-blue-400 {
    border-inline-start-color: var(--color-blue-400);
    border-inline-end-color: var(--color-blue-400);
  }
  .border-is-blue-400 {
    border-inline-start-color: var(--color-blue-400);
  }
  .border-ie-blue-400 {
    border-inline-end-color: var(--color-blue-400);
  }
  .bg-gray-300 {
    background-color: var(--color-gray-300);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-tr {
    --tw-gradient-position: to top right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-cyan-100 {
    --tw-gradient-from: var(--color-cyan-100);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-teal-300 {
    --tw-gradient-from: var(--color-teal-300);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .via-cyan-400 {
    --tw-gradient-via: var(--color-cyan-400);
    --tw-gradient-via-stops: var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .to-cyan-200 {
    --tw-gradient-to: var(--color-cyan-200);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-sky-400 {
    --tw-gradient-to: var(--color-sky-400);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .bg-fixed {
    background-attachment: fixed;
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .pli-2 {
    padding-inline: 0.5rem;
  }
  .pli-4 {
    padding-inline: 1rem;
  }
  .pli-16 {
    padding-inline: 4rem;
  }
  .plb-0\.5 {
    padding-block: 0.125rem;
  }
  .plb-2 {
    padding-block: 0.5rem;
  }
  .plb-16 {
    padding-block: 4rem;
  }
  .pis-2 {
    padding-inline-start: 0.5rem;
  }
  .pis-16 {
    padding-inline-start: 4rem;
  }
  .pie-2 {
    padding-inline-end: 0.5rem;
  }
  .pie-16 {
    padding-inline-end: 4rem;
  }
  .text-center {
    text-align: center;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-6xl {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-xl\/8 {
    font-size: var(--text-xl);
    line-height: calc(var(--spacing) * 8);
  }
  .leading-6 {
    --tw-leading: calc(var(--spacing) * 6);
    line-height: calc(var(--spacing) * 6);
  }
  .leading-8 {
    --tw-leading: calc(var(--spacing) * 8);
    line-height: calc(var(--spacing) * 8);
  }
  .leading-loose {
    --tw-leading: var(--leading-loose);
    line-height: var(--leading-loose);
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .text-cyan-600 {
    color: var(--color-cyan-600);
  }
  .text-cyan-700 {
    color: var(--color-cyan-700);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .underline {
    text-decoration-line: underline;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
      0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-inner {
    --tw-shadow: inset 0 2px 4px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
      0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .space-b-2 {
    & > :not(:last-child) {
      --tw-space-b-reverse: 0;
      margin-block-start: calc(0.5rem * var(--tw-space-b-reverse));
      margin-block-end: calc(0.5rem * calc(1 - var(--tw-space-b-reverse)));
    }
  }
  .space-b-4 {
    & > :not(:last-child) {
      --tw-space-b-reverse: 0;
      margin-block-start: calc(1rem * var(--tw-space-b-reverse));
      margin-block-end: calc(1rem * calc(1 - var(--tw-space-b-reverse)));
    }
  }
  .space-b-8 {
    & > :not(:last-child) {
      --tw-space-b-reverse: 0;
      margin-block-start: calc(2rem * var(--tw-space-b-reverse));
      margin-block-end: calc(2rem * calc(1 - var(--tw-space-b-reverse)));
    }
  }
  .border-lb-8 {
    border-block-start-width: 8px;
    border-block-end-width: 8px;
  }
  .border-lb-blue-400 {
    border-block-start-color: var(--color-blue-400);
    border-block-end-color: var(--color-blue-400);
  }
  .block-end-4 {
    inset-block-end: 1rem;
  }
  .block-start-4 {
    inset-block-start: 1rem;
  }
  .block-start-8 {
    inset-block-start: 2rem;
  }
  .border-be-8 {
    border-block-end-width: 8px;
  }
  .border-be-blue-400 {
    border-block-end-color: var(--color-blue-400);
  }
  .border-bs {
    border-block-start-width: 1px;
  }
  .border-bs-8 {
    border-block-start-width: 8px;
  }
  .border-bs-blue-400 {
    border-block-start-color: var(--color-blue-400);
  }
  .bs-12 {
    block-size: 3rem;
  }
  .bs-16 {
    block-size: 4rem;
  }
  .bs-24 {
    block-size: 6rem;
  }
  .bs-32 {
    block-size: 8rem;
  }
  .bs-36 {
    block-size: 9rem;
  }
  .bs-48 {
    block-size: 12rem;
  }
  .bs-64 {
    block-size: 16rem;
  }
  .bs-96 {
    block-size: 24rem;
  }
  .is-1\/3 {
    inline-size: 33.333333%;
  }
  .is-1\/4 {
    inline-size: 25%;
  }
  .is-16 {
    inline-size: 4rem;
  }
  .is-32 {
    inline-size: 8rem;
  }
  .is-48 {
    inline-size: 12rem;
  }
  .is-64 {
    inline-size: 16rem;
  }
  .is-full {
    inline-size: 100%;
  }
  .max-bs-full {
    max-block-size: 100%;
  }
  .max-is-7xl {
    max-inline-size: 80rem;
  }
  .max-is-lg {
    max-inline-size: 32rem;
  }
  .max-is-md {
    max-inline-size: 28rem;
  }
  .max-is-prose {
    max-inline-size: 65ch;
  }
  .max-is-sm {
    max-inline-size: 24rem;
  }
  .mbe-2 {
    margin-block-end: 0.5rem;
  }
  .mbe-16 {
    margin-block-end: 4rem;
  }
  .mbs-2 {
    margin-block-start: 0.5rem;
  }
  .mbs-4 {
    margin-block-start: 1rem;
  }
  .mbs-16 {
    margin-block-start: 4rem;
  }
  .min-bs-0 {
    min-block-size: 0px;
  }
  .min-bs-full {
    min-block-size: 100%;
  }
  .min-is-0 {
    min-inline-size: 0px;
  }
  .min-is-full {
    min-inline-size: 100%;
  }
  .overscroll-b-auto {
    overscroll-behavior-block: auto;
  }
  .overscroll-b-contain {
    overscroll-behavior-block: contain;
  }
  .overscroll-b-none {
    overscroll-behavior-block: none;
  }
  .overscroll-i-auto {
    overscroll-behavior-inline: auto;
  }
  .overscroll-i-contain {
    overscroll-behavior-inline: contain;
  }
  .overscroll-i-none {
    overscroll-behavior-inline: none;
  }
  .pbe-12 {
    padding-block-end: 3rem;
  }
  .pbe-16 {
    padding-block-end: 4rem;
  }
  .pbe-24 {
    padding-block-end: 6rem;
  }
  .pbs-4 {
    padding-block-start: 1rem;
  }
  .pbs-6 {
    padding-block-start: 1.5rem;
  }
  .pbs-8 {
    padding-block-start: 2rem;
  }
  .pbs-16 {
    padding-block-start: 4rem;
  }
  .space-b-reverse {
    & > :not(:last-child) {
      --tw-space-b-reverse: 1;
    }
  }
  .space-i-reverse {
    & > :not(:last-child) {
      --tw-space-i-reverse: 1;
    }
  }
  .hover\:bg-gray-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
  }
  .hover\:from-cyan-100 {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-from: var(--color-cyan-100);
        --tw-gradient-stops: var(
          --tw-gradient-via-stops,
          var(--tw-gradient-position),
          var(--tw-gradient-from) var(--tw-gradient-from-position),
          var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
      }
    }
  }
  .hover\:to-cyan-300 {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-to: var(--color-cyan-300);
        --tw-gradient-stops: var(
          --tw-gradient-via-stops,
          var(--tw-gradient-position),
          var(--tw-gradient-from) var(--tw-gradient-from-position),
          var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
      }
    }
  }
  .hover\:text-black {
    &:hover {
      @media (hover: hover) {
        color: var(--color-black);
      }
    }
  }
  .hover\:text-cyan-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-800);
      }
    }
  }
  .hover\:text-cyan-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-900);
      }
    }
  }
  .sm\:inline {
    @media (width >= 40rem) {
      display: inline;
    }
  }
  .sm\:flex-none {
    @media (width >= 40rem) {
      flex: none;
    }
  }
  .sm\:pli-12 {
    @media (width >= 40rem) {
      padding-inline: 3rem;
    }
  }
  .md\:border-8 {
    @media (width >= 48rem) {
      border-style: var(--tw-border-style);
      border-width: 8px;
    }
  }
  .md\:pli-8 {
    @media (width >= 48rem) {
      padding-inline: 2rem;
    }
  }
  .md\:text-base {
    @media (width >= 48rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .lg\:block {
    @media (width >= 64rem) {
      display: block;
    }
  }
  .lg\:grid {
    @media (width >= 64rem) {
      display: grid;
    }
  }
  .lg\:flex-1 {
    @media (width >= 64rem) {
      flex: 1;
    }
  }
  .lg\:grid-cols-4 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .lg\:gap-x-8 {
    @media (width >= 64rem) {
      column-gap: calc(var(--spacing) * 8);
    }
  }
  .lg\:pli-0 {
    @media (width >= 64rem) {
      padding-inline: 0px;
    }
  }
  .lg\:pbe-12 {
    @media (width >= 64rem) {
      padding-block-end: 3rem;
    }
  }
  .lg\:pbs-12 {
    @media (width >= 64rem) {
      padding-block-start: 3rem;
    }
  }
  .xl\:gap-x-12 {
    @media (width >= 80rem) {
      column-gap: calc(var(--spacing) * 12);
    }
  }
  .xl\:pli-12 {
    @media (width >= 80rem) {
      padding-inline: 3rem;
    }
  }
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
